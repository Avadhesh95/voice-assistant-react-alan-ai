{"ast":null,"code":"var _jsxFileName = \"/Users/indianrenters/Codebase/audio-ninja/src/Main.js\";\nimport React from \"react\";\n// import { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Test from \"./Test\";\n// import { Routes ,Route } from 'react-router-dom';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n// The Main component renders one of the three provided\n// Routes (provided that one matches). Both the /roster\n// and /schedule routes will match any pathname that starts\n// with /roster or /schedule. The / route will only match\n// when the pathname is exactly the string \"/\"\nconst Main = () => {\n  console.log('in main component');\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/test\",\n    component: /*#__PURE__*/React.createElement(Test, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 46\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Main;","map":{"version":3,"names":["React","Home","Test","BrowserRouter","Routes","Route","Main","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","component"],"sources":["/Users/indianrenters/Codebase/audio-ninja/src/Main.js"],"sourcesContent":["import React from \"react\";\n// import { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Test from \"./Test\";\n// import { Routes ,Route } from 'react-router-dom';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\n\n// The Main component renders one of the three provided\n// Routes (provided that one matches). Both the /roster\n// and /schedule routes will match any pathname that starts\n// with /roster or /schedule. The / route will only match\n// when the pathname is exactly the string \"/\"\nconst Main = () => {\n\n    console.log('in main component');\n\n    return (\n    <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" component={<Home />} />\n        <Route exact path=\"/test\" component={<Test />} />\n      </Routes>\n    </BrowserRouter>\n    );\n}\n\nexport default Main;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB;AACA,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;;AAE/D;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAEfC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAEhC,oBACAR,KAAA,CAAAS,aAAA,CAACN,aAAa;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACZf,KAAA,CAAAS,aAAA,CAACL,MAAM;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACLf,KAAA,CAAAS,aAAA,CAACJ,KAAK;IAACW,KAAK;IAACC,IAAI,EAAC,GAAG;IAACC,SAAS,eAAElB,KAAA,CAAAS,aAAA,CAACR,IAAI;MAAAS,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC7Cf,KAAA,CAAAS,aAAA,CAACJ,KAAK;IAACW,KAAK;IAACC,IAAI,EAAC,OAAO;IAACC,SAAS,eAAElB,KAAA,CAAAS,aAAA,CAACP,IAAI;MAAAQ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC1C,CACK,CAAC;AAEpB,CAAC;AAED,eAAeT,IAAI"},"metadata":{},"sourceType":"module"}